"""
db_utils.py — tiny SQLite helper layer
- get_conn(): context manager for connections
- rows_to_dicts(): convenience converter
"""
import sqlite3
from contextlib import contextmanager
from typing import Iterable, List, Dict, Any

DB_PATH = "app.db"

@contextmanager
def get_conn():
    conn = sqlite3.connect(DB_PATH)
    conn.row_factory = sqlite3.Row
    try:
        yield conn
        conn.commit()
    finally:
        conn.close()

def rows_to_dicts(rows: Iterable[sqlite3.Row]) -> List[Dict[str, Any]]:
    return [dict(r) for r in rows]
